| AstSyntax.AppelFonction ((f,_), l) ->
    let f_tds = chercherGlobalementUnsafeIdent tds f in
    (* On vérifie qu'on appel bien une fonction *)
    (match f_tds with
      InfoFun((_,Neant),_,_) -> AstTds.AppelFonction ( (f_tds,Neant)
                                , List.map (analyse_tds_expression tds) l)
      |_ -> raise (MauvaiseUtilisationIdentifiant (print_ident f)));


let analyse_tds_fonction maintds (AstSyntax.Fonction(t,(id,m),l_param_unref,l_inst)) nb_lignes =
  (* On passe les types en référence pour les traiter comme des infovar *)
  let l_param = List.map (fun (t,y) -> (ref t,y)) l_param_unref in
  (* On vérifie que la fonction n'est pas déjà déclarée *)
  absentLocalementUnsafeIdent maintds id;
  (* création de la td fille : tds liée au bloc de la fonction *) 
  let tds_fille = creerTDSFille maintds in

  let l_param_tds' =
    List.map (fun (t,s) -> ((t,s), (InfoVar(s, t, ref 0, ref  "")))) l_param in
  
  let getSeconds = List.map (fun (c,iast') -> (snd c, iast')) in
  let getFirsts = List.map (fun (c,iast') -> (fst c, iast')) in
  (* ajouter les paramètres dans la tds fille pour l'analyse du bloc
   * on fait attention aux possibles doublons
   * Remarque : ici, choix qu'on peut avoir une variable déclarée dans le bloc englobant et
   * un paramètre de même nom *)
  List.fold_right (fun curr () -> absentLocalementUnsafeIdent tds_fille (fst curr);
                                  ajouter tds_fille (fst curr) (snd curr))
                  (getFirsts (getSeconds l_param_tds')) ();

  (* ajout de la fonction dans la tds mère *)
  (* On conserve aussi l'identifiant bien que ça ne soit pas nécessaire *)
  ajouter maintds id ((InfoFun ((id,m), t, l_param)));

  (* Redéfinition à koz 2 la boté de kaml *)
  let getFirsts = List.map (fun (c,iast') -> (fst c, iast')) in

  (* liste des ASTTds instructions *)
  let (l_inst_tds, nb) = analyse_tds_bloc tds_fille (chercherGlobalement tds_fille id) None l_inst nb_lignes [(id, 0)] in
  let id_tds = chercherGlobalementUnsafeIdent tds_fille id in
  let l = getFirsts l_param_tds' in
  (AstTds.Fonction(t, id_tds, l, l_inst_tds),nb)
